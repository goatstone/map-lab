{"version":3,"sources":["config/g-key.js","config/bingmap-key.js","style/main-style.js","components/InfoModal/index.js","components/MainHeader/index.tsx","components/Map.tsx","config/index.js","components/gibs-map/index.tsx","components/gibs-map/gibs.ts","command-items/info.js","command-items/info-with-action.js","components/gibs-map/ui/product-select.ts","components/App.tsx","index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","gMapAPIKey","bingAPIKey","style","mainContainer","display","flexDirection","fontSize","fontFamily","color","background","position","top","left","right","bottom","& .info","& #bing-map","width","& .zoom-command-item-leaflet","& .zoom-command-item-gmap","& .zoom-command-item: before","content","& header","justifyContent","& header h1","margin","& header > div","flexGrow","& footer","alignItems","& button","cursor","& button i","& fieldset","padding","borderRadius","& section[data-id=goatstone-component-moveto]","& [data-id=goatstone-component-motion]","displayResults","zIndex","boxShadow","& ul","& li","& li:hover","Object","assign","drawerContainer","& button[data-component-name=\"toggle\"]","gMap","height","lMap","frame","theme","getTheme","contentStyles","mergeStyleSets","container","flexFlow","header","fonts","xLargePlus","flex","body","overflowY","selectors","p","p:first-child","marginTop","p:last-child","marginBottom","iconButtonStyles","root","palette","neutralPrimary","marginLeft","marginRight","rootHovered","neutralDark","cancelIcon","iconName","InfoModal","_ref","setIsModalOpen","isModalOpen","react_default","a","createElement","Modal","isOpen","onDismiss","isBlocking","containerClassName","dragOptions","className","IconButton","styles","iconProps","ariaLabel","onClick","href","target","MainHeader","title","items","farItems","children","CommandBar","attribution","mbUrl","L","tileLayer","id","accessToken","Map","config","gKey","require","default","configUpdate","e","console","warn","map","url","gibs","products","multibandImagery","description","imageLayer","dateRange","tileMatrixSets","format","gibsImageServiceUrl","tile","product","date","concat","zoom","y","x","seattle","GibsMap","window","GetBingMap","Microsoft","Maps","center","construct","Location","mapTypeId","MapTypeId","canvasDark","showLocateMeButton","disableStreetside","disableBirdseye","showZoomButtons","showMapTypeSelector","showScalebar","allowHidingLabelsOfRoad","showMapLabels","labelOverlay","LabelOverlay","hidden","tileSource","TileSource","uriConstructor","minZoom","maxZoom","layer","TileLayer","mercator","opacity","layers","insert","useEffect","node","document","src","el","getElementById","appendChild","clear","info","key","text","iconOnly","infoWithAction","infoCommandItem","productSelect","setProduct","forEach","item","push","subMenuProps","initializeIcons","jss","setup","preset","sheet","createStyleSheet","attach","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","day","setDay","_useState7","_useState8","month","setMonth","_useState9","_useState10","year","setYear","_useState11","_useState12","setDate","userSelectedDate","Date","getFullYear","String","getMonth","padStart","getDate","Fragment","classes","components_InfoModal","components_MainHeader","Slider","label","min","max","value","showValue","onChange","dayValue","monthValue","yearValue","gibs_map","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.17d11e9b.chunk.js","sourcesContent":["export default { gMapAPIKey: 'AIzaSyA2LL0mG791RCw9iaRpZvSwg6yJJFnwRWE' }\n","export default { bingAPIKey: 'ApWbpkWHATjCJtjjxiB4YwKp_zEjcoz95O_qGYM2EitYdUP-PbkAwxvjPH0DO18V' }\n","\nconst buttonTextColor = '#111'\n\nconst style = {\n  mainContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: '0.9em',\n    fontFamily: 'sans-serif',\n    color: '#eee',\n    background: 'gray',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    '& .info': {\n      position: 'absolute',\n    },\n    '& #bing-map': {\n      width: '100%',\n    },\n    '& .zoom-command-item-leaflet': {\n      background: '#ccc',\n    },\n    '& .zoom-command-item-gmap': {\n      background: '#eee',\n    },\n    '& .zoom-command-item: before': {\n      content: 'gray',\n    },\n    '& header': {\n      display: 'flex',\n      justifyContent: 'center',\n      background: 'white',\n    },\n    '& header h1': {\n      color: 'gray',\n      margin: '6px 12px',\n    },\n    '& header > div': {\n      flexGrow: 1,\n    },\n    '& footer': {\n      background: 'gray',\n      display: 'flex',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n    },\n    '& button': {\n      cursor: 'pointer',\n      color: buttonTextColor,\n    },\n    '& button i': {\n      color: buttonTextColor,\n    },\n    '& fieldset': {\n      padding: '0.3em',\n      borderRadius: '0.3em',\n    },\n    '& section[data-id=goatstone-component-moveto]': {\n      display: 'flex',\n      justifyContent: 'flex-start',\n    },\n    '& [data-id=goatstone-component-motion]': {\n      display: 'flex',\n      justifyContent: 'flex-start',\n    },\n  },\n  displayResults: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-start',\n    width: '250px',\n    padding: '0.25em',\n    color: '#222',\n    background: 'rgba(200,200,200, 0.8)',\n    zIndex: 900,\n    boxShadow: '10px 10px 10px rgba(100, 100, 100, 0.8)',\n    '& ul': {\n      padding: 0,\n      margin: 0,\n    },\n    '& li': {\n      background: '#ccc',\n      margin: '0.25em',\n      borderRadius: '3px',\n      cursor: 'default',\n      zIndex: 100,\n    },\n    '& li:hover': {\n      background: 'white',\n    },\n  },\n}\n\nconst drawerContainer = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  background: 'rgba(200,200,200, 0.8)',\n  '& button[data-component-name=\"toggle\"]': {\n    background: '#ccc',\n    boxShadow: '10px 10px 10px rgba(100, 100, 100, 0.8)',\n  },\n  padding: '0.5em',\n  borderRadius: '0.3em',\n  boxShadow: '10px 10px 10px rgba(100, 100, 100, 0.8)',\n}\n\nconst gMap = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  height: '100%',\n}\nconst lMap = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  height: '100%',\n}\nconst frame = {\n  display: 'flex',\n  width: '100%',\n  height: '100%',\n}\nexport default Object.assign(style,\n  { drawerContainer },\n  { gMap },\n  { lMap },\n  { frame })\n","import {\n  IconButton,\n  Modal,\n  mergeStyleSets,\n  getTheme,\n} from '@fluentui/react'\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nconst theme = getTheme()\nconst contentStyles = mergeStyleSets({\n  container: {\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    alignItems: 'stretch',\n    fontSize: '1.4em',\n    padding: '1em',\n  },\n  header: [\n    theme.fonts.xLargePlus,\n    {\n      flex: '1 1 auto',\n      display: 'flex',\n      alignItems: 'center',\n      padding: 0,\n    },\n  ],\n  body: {\n    flex: '4 4 auto',\n    padding: '0 24px 24px 24px',\n    overflowY: 'hidden',\n    selectors: {\n      p: { margin: '14px 0' },\n      'p:first-child': { marginTop: 0 },\n      'p:last-child': { marginBottom: 0 },\n    },\n  },\n})\nconst iconButtonStyles = {\n  root: {\n    color: theme.palette.neutralPrimary,\n    marginLeft: 'auto',\n    marginTop: '4px',\n    marginRight: '2px',\n  },\n  rootHovered: {\n    color: theme.palette.neutralDark,\n  },\n}\nconst cancelIcon = { iconName: 'Cancel' }\n\nconst InfoModal = ({ setIsModalOpen, isModalOpen }) => (\n  <Modal\n    // titleAriaId={titleId}\n    isOpen={isModalOpen}\n    onDismiss={() => setIsModalOpen(false)}\n    isBlocking={false}\n    containerClassName={contentStyles.container}\n    dragOptions={false}\n  >\n    <div className={contentStyles.header}>\n      <IconButton\n        styles={iconButtonStyles}\n        iconProps={cancelIcon}\n        ariaLabel=\"Close popup modal\"\n        onClick={() => setIsModalOpen(false)}\n      />\n    </div>\n    <h2>Nasa Layers</h2>\n    <p>\n      Images from&nbsp;\n      <a href=\"https://earthdata.nasa.gov/eosdis/science-system-description/eosdis-components/gibs\" target=\"new\">\n        Global Imagery Browse Services (GIBS)\n      </a>\n    </p>\n    <p>\n      &copy;&nbsp;\n      <a href=\"https://goatstone.com\" target=\"new\">Goatstone</a>\n      &nbsp;\n      2021\n    </p>\n  </Modal>\n)\n/* eslint-disable react/forbid-prop-types */\nInfoModal.propTypes = {\n  setIsModalOpen: PropTypes.func.isRequired,\n  isModalOpen: PropTypes.bool.isRequired,\n}\nexport default InfoModal\n","import React from 'react'\nimport { CommandBar, ICommandBarItemProps } from '@fluentui/react'\n\ninterface MainHeaderProps {\n  title: string\n  items: ICommandBarItemProps[]\n  farItems: ICommandBarItemProps[]\n  children: React.ReactElement\n}\ninterface IMainHeader {\n  (props: MainHeaderProps): React.ReactElement\n}\n\nconst MainHeader: IMainHeader = ({\n  title, items, farItems, children,\n}: MainHeaderProps) => (\n  <header>\n    <h1>\n      {title}\n    </h1>\n    {children}\n    <CommandBar\n      items={items}\n      farItems={farItems}\n      ariaLabel=\"Use left and right arrow keys to navigate between commands\"\n    />\n  </header>\n)\n\nexport default MainHeader\n","import React, { useEffect, useRef } from 'react'\nimport L from 'leaflet'\nimport { AppServiceInstanceI } from '../app-service'\n\nconst attribution = 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, '\n  + '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, '\n  + 'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'\nconst mbUrl = 'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}'\nconst grayscale = L.tileLayer(\n  mbUrl,\n  {\n    id: 'mapbox/streets-v11',\n    attribution,\n    accessToken: 'pk.eyJ1IjoiZ29hdHN0b25lIiwiYSI6ImNrMmp5dnoycjFsazgzYm1zbjE0anRobzkifQ.tW-4mQDJK41ayRkBxtz15w',\n  },\n)\nconst streets = L.tileLayer(\n  mbUrl,\n  {\n    id: 'mapbox/streets-v11',\n    attribution,\n    accessToken: 'pk.eyJ1IjoiZ29hdHN0b25lIiwiYSI6ImNrMmp5dnoycjFsazgzYm1zbjE0anRobzkifQ.tW-4mQDJK41ayRkBxtz15w',\n  },\n)\n\nfunction Map({\n  id,\n  appService,\n  mainClassName,\n  idName = 'leaflet-map',\n}: { id: any, appService: AppServiceInstanceI, mainClassName: any, idName: string }) {\n  const resetZoomLevel = 12\n  const mapRef: any = useRef(null)\n  const userMoveListener = () => {\n    appService.addCenterStatus(\n      [mapRef.current.getCenter().lat, mapRef.current.getCenter().lng], id,\n    )\n  }\n  useEffect(() => {\n    appService.addCenterEventListener(center => {\n      if (mapRef.current) {\n        mapRef.current.panTo(center)\n      }\n    }, id)\n    mapRef.current = L.map(idName, {\n      center: [47.6, -122.3],\n      zoom: resetZoomLevel,\n      zoomControl: false,\n      layers: [\n        grayscale, streets,\n      ],\n      scrollWheelZoom: false,\n      keyboard: false,\n    })\n    // capture only user map chage to dispatch status\n    mapRef.current.on('mousedown', () => {\n      mapRef.current.on('move', userMoveListener)\n    })\n    mapRef.current.on('mouseup', () => {\n      mapRef.current.off('move')\n    })\n    mapRef.current.off('dblclick')\n    mapRef.current.off('doubleClickZoom')\n    mapRef.current.off('move')\n  }, [])\n\n  return (\n    <div\n      id={idName}\n      data-id=\"goatstone-component-leaflet-map\"\n      className={mainClassName}\n    />\n  )\n}\n\nexport default Map\n","const config = {\n  gMapAPIKey: '',\n  bingAPIKey: '',\n}\n\ntry {\n  // eslint-disable-next-line\n  const gKey = require('./g-key').default\n  const configUpdate = require('./bingmap-key').default\n  Object.assign(config, gKey, configUpdate)\n} catch (e) {\n  // eslint-disable-next-line\n  console.warn('missing config files')\n}\n\nexport default config\n","import React, { useEffect } from 'react'\nimport './bingmap.css'\nimport { gibsImageServiceUrl, gibs } from './gibs'\n\ndeclare global {\n  interface Window { Microsoft: any, GetBingMap: any }\n}\ndeclare const window: Window\n\nlet map: any\nlet url: any\nconst seattle = [40.0, 0.0]\n\nconst GibsMap = ({\n  config,\n  product,\n  date,\n}: { config: any, product: string, date: string }) => {\n  url = `https://www.bing.com/api/maps/mapcontrol?callback=GetBingMap&key=${config.bingAPIKey}`\n  window.GetBingMap = () => {\n    map = new window.Microsoft.Maps.Map('#bing-map', {\n      center: new window.Microsoft.Maps.Location(...seattle),\n      mapTypeId: window.Microsoft.Maps.MapTypeId.canvasDark,\n      zoom: 3,\n      showLocateMeButton: false,\n      disableStreetside: true,\n      disableBirdseye: true,\n      showZoomButtons: false,\n      showMapTypeSelector: false,\n      showScalebar: false,\n      allowHidingLabelsOfRoad: true,\n      showMapLabels: false,\n      labelOverlay: window.Microsoft.Maps.LabelOverlay.hidden,\n    })\n    const tileSource = new window.Microsoft.Maps.TileSource({\n      uriConstructor: (tile: any) => gibsImageServiceUrl(\n        tile,\n        gibs.products.multibandImagery[0].imageLayer,\n        date,\n      ),\n      minZoom: 1,\n      maxZoom: 16,\n    })\n    const layer = new window.Microsoft.Maps.TileLayer({\n      mercator: tileSource,\n      opacity: 0.7,\n    })\n    map.layers.insert(layer)\n  }\n  useEffect(() => {\n    const node = document.createElement('script')\n    node.src = url\n    const el = document.getElementById('bing-map')\n    if (el) {\n      el.appendChild(node)\n    }\n  }, [])\n  useEffect(() => {\n    if (map) {\n      const tileSource = new window.Microsoft.Maps.TileSource({\n        uriConstructor: (tile: any) => gibsImageServiceUrl(\n          tile,\n          product,\n          date,\n        ),\n        minZoom: 1,\n        maxZoom: 16,\n      })\n      const layer = new window.Microsoft.Maps.TileLayer({\n        mercator: tileSource,\n        opacity: 0.7,\n      })\n      map.layers.clear()\n      map.layers.insert(layer)\n    }\n  }, [product, date])\n  return (\n    <div id=\"bing-map\">&nbsp;</div>\n  )\n}\n\nexport default GibsMap\n","/*\nInformation about this data can be found here:\nhttps://wiki.earthdata.nasa.gov/display/GIBS/GIBS+Available+Imagery+Products#expand-CorrectedReflectance17Products\n\n`https://map1.vis.earthdata.nasa.gov/wmts-geo/\n MODIS_Terra_CorrectedReflectance_TrueColor/default/2014-07-09/\n EPSG4326_250m/${tile.zoom}/${tile.y}/${tile.x}.jpg`,\n https://gibs.earthdata.nasa.gov/wmts/epsg{EPSG:Code}/best/\n {ProductName}/default/{Time}/{TileMatrixSet}/{ZoomLevel}/{TileRow}/{TileCol}.png\n*/\n\nexport interface Product {\n  description: string\n  imageLayer: string\n  dateRange: string[]\n  tileMatrixSets: string[]\n  format: string\n}\nexport interface Gibs {\n  products: { multibandImagery: Product[] }\n}\nconst gibs: Gibs = {\n  products: {\n    multibandImagery: [\n      {\n        description: 'Corrected Reflectance (True Color)',\n        imageLayer: 'MODIS_Terra_CorrectedReflectance_TrueColor',\n        dateRange: ['2003-01-01', 'present'],\n        tileMatrixSets: ['EPSG4326_250m'],\n        format: 'jpg',\n      },\n      {\n        description: 'Corrected Reflectance ',\n        imageLayer: 'VIIRS_SNPP_CorrectedReflectance_TrueColor',\n        dateRange: ['2020-04-25', 'present'],\n        tileMatrixSets: ['EPSG4326_250m'],\n        format: 'jpg',\n      },\n      {\n        description: 'Corrected Reflectance (Bands 3-6-7) ',\n        imageLayer: 'MODIS_Terra_CorrectedReflectance_Bands367',\n        dateRange: ['2003-01-01', 'present'],\n        tileMatrixSets: ['EPSG4326_250m'],\n        format: 'jpg',\n      }, {\n        description: 'Corrected Reflectance (Bands 7-2-1) ',\n        imageLayer: 'MODIS_Aqua_CorrectedReflectance_Bands721',\n        dateRange: ['2003-01-01', 'present'],\n        tileMatrixSets: ['EPSG4326_250m'],\n        format: 'jpg',\n      },\n      {\n        description: 'Corrected Reflectance (Bands 7-2-1) ',\n        imageLayer: 'MODIS_Terra_CorrectedReflectance_Bands367',\n        dateRange: ['2003-01-01', 'present'],\n        tileMatrixSets: ['EPSG4326_250m'],\n        format: 'jpg',\n      },\n    ],\n  },\n}\nconst gibsImageServiceUrl = (tile: any, product: string, date: string) => `\nhttps://map1.vis.earthdata.nasa.gov/wmts-geo/${product}/default/${date}/EPSG4326_250m/${tile.zoom}/${tile.y}/${tile.x}.jpg`\n\nexport { gibsImageServiceUrl, gibs }\n","\nexport default {\n  key: 'info',\n  text: 'Info',\n  // This needs an ariaLabel since it's icon-only\n  ariaLabel: 'Info',\n  iconOnly: true,\n  iconProps: { iconName: 'Info' },\n}\n","// commandItem onClickAction () => {}\n// add an onClick porrop to command Item\nconst infoWithAction = (infoCommandItem, setIsModalOpen) => {\n  Object.assign(\n    infoCommandItem,\n    {\n      onClick: () => setIsModalOpen(true),\n    },\n  )\n}\n\nexport default infoWithAction\n","import { ICommandBarItemProps } from '@fluentui/react'\nimport { gibs } from '../gibs'\n\ninterface ProductSelect {\n  (setProduct: React.Dispatch<React.SetStateAction<string>>): ICommandBarItemProps\n}\n\nconst productSelect: ProductSelect = setProduct => {\n  const items: ICommandBarItemProps[] = []\n  gibs.products.multibandImagery.forEach(product => {\n    const item: any = {\n      key: product.imageLayer,\n      text: product.description,\n      onClick: () => setProduct(product.imageLayer),\n    }\n    items.push(item)\n  })\n\n  return {\n    key: 'gibs-products',\n    text: 'Gibs Products',\n    iconProps: { iconName: 'ProductList' },\n    subMenuProps: {\n      items,\n    },\n  }\n}\n\nexport default productSelect\n","import React, { useEffect, useState } from 'react'\nimport { initializeIcons, Slider } from '@fluentui/react'\nimport jss from 'jss'\nimport preset from 'jss-preset-default'\nimport style from '../style/main-style'\nimport { InfoModal, GibsMap } from '.'\nimport MainHeader from './MainHeader'\nimport { infoCommandItem, infoWithAction } from '../command-items'\nimport config from '../config'\nimport productSelect from './gibs-map/ui/product-select'\n\ninitializeIcons()\njss.setup(preset())\nconst sheet = jss.createStyleSheet(style)\nsheet.attach()\n\nfunction App() {\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [product, setProduct] = useState<string>('MODIS_Terra_CorrectedReflectance_TrueColor')\n  const [day, setDay] = useState<number>(10)\n  const [month, setMonth] = useState<number>(7)\n  const [year, setYear] = useState<number>(2003)\n  const [date, setDate] = useState('2003-08-10')\n  infoWithAction(infoCommandItem, setIsModalOpen)\n  useEffect(() => {\n    const userSelectedDate = new Date(year, month, day)\n    setDate(\n      `${userSelectedDate\n        .getFullYear()}-${String(userSelectedDate\n        .getMonth()).padStart(2, '0')}-${String(userSelectedDate\n        .getDate()).padStart(2, '0')}`,\n    )\n  }, [year, month, day])\n\n  return (\n    <>\n      <section className={sheet.classes.mainContainer}>\n        <InfoModal\n          setIsModalOpen={setIsModalOpen}\n          isModalOpen={isModalOpen}\n        />\n        <MainHeader\n          title=\"Nasa Layers\"\n          items={[\n            productSelect(setProduct),\n          ]}\n          farItems={[infoCommandItem]}\n        >\n          <>\n            <Slider\n              label=\"Day\"\n              min={1}\n              max={30}\n              value={day}\n              showValue\n              onChange={(dayValue: number) => setDay(dayValue)}\n            />\n            <Slider\n              label=\"Month\"\n              min={1}\n              max={12}\n              value={month}\n              showValue\n              onChange={(monthValue: number) => setMonth(monthValue)}\n            />\n            <Slider\n              label=\"Year\"\n              min={2003}\n              max={2020}\n              value={year}\n              showValue\n              onChange={(yearValue: number) => setYear(yearValue)}\n            />\n          </>\n        </MainHeader>\n        <div className={sheet.classes.frame}>\n          <GibsMap\n            config={config}\n            product={product}\n            date={date}\n          />\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}